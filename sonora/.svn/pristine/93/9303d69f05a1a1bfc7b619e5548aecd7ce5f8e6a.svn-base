/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifsc.sonora.rest;


import br.edu.ifsc.sonora.dao.SonoraDAO;
import br.edu.ifsc.sonora.entidade.Sonora;
import br.edu.ifsc.sonora.util.ResponseUtils;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.PostConstruct;
import javax.enterprise.context.ApplicationScoped;
import javax.inject.Inject;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

/**
 *
 * @author renato
 */
@ApplicationScoped
@Path("/sonora")
public class SonoraREST extends AbstractREST<Sonora, SonoraDAO> {

    @Inject
    private SonoraDAO dao;

    private List<Sonora> all = new ArrayList<>();
    private Map<String, Sonora> map = new HashMap<>();

    @PostConstruct
    public void init() {
        all.addAll(dao.getAll());
        all.stream().forEach((sonora) -> {
            map.put(sonora.getRfid(), sonora);
        });
    }

    public void add(Sonora sonora) {
        all.add(sonora);
        map.put(sonora.getRfid(), sonora);
    }

    @GET
    @Path("/tag/{param}")
    @Produces("application/json")
    public Response searchTag(@PathParam("param") String rfid) {
        Sonora res;
        try {
            res = dao.findByRfid(rfid);

            return ResponseUtils.success(res);

        } catch (Exception ex) {
            Logger.getLogger(SonoraREST.class.getName()).log(Level.SEVERE, null, ex);
            Sonora sonora = new Sonora();
            sonora.setRfid(rfid);
            sonora.setDescricao("Indefinido");
            try {
                dao.save(sonora);
                add(sonora);
            } catch (Exception ex1) {
                ex1.printStackTrace();
                Logger.getLogger(SonoraREST.class.getName()).log(Level.SEVERE, null, ex1);
            }

            return ResponseUtils.success(sonora);
        }
    }

    @GET
    @Path("/all")
    @Produces("application/json")
    public Response searchAll() {

        return ResponseUtils.success(all);
    }

    @GET
    @Path("/last")
    @Produces("application/json")
    public Response searchLast() {

        return ResponseUtils.success(getDao().getLast());
    }
    @GET
    @Path("/last/{param}")
    @Produces("application/json")
    public Response searchLast10(@PathParam("param") int param) throws Exception {

        return ResponseUtils.success(getDao().getLast(param));
    }
    
    @Override
    public SonoraDAO getDao() {
        return dao;
    }

}
